#!/bin/bash
#
# /etc/rc.d/init.d/pds

# Source function library.
. /lib/lsb/init-functions

SERVERNAME='pds'
PIDPATH=/var/run
EXECUTABLE_PATH=/usr/bin
APPLICATION_PATH=/opt/PDS/src

get_message(){
    if [ $RETVAL -eq 0 ]; then
        echo "[ $(tput setaf 2)OK$(tput sgr0) ]"
    else
        echo "[ $(tput setaf 1)Failed$(tput sgr0) ]"
    fi
}
start () {
# Check if the service is already running?
if [ ! -f $PIDPATH/$SERVERNAME.pid ]; then
    echo -n $"Starting $SERVERNAME...   "
    $EXECUTABLE_PATH/python $APPLICATION_PATH/main.py > pds.log 2>&1&
    echo $! > $PIDPATH/$SERVERNAME.pid
    RETVAL=$?
    get_message
else
    echo -n $"$SERVERNAME is already running...     "
    RETVAL=1
    get_message
fi
}

stop() {
# Stop daemons.
if [ -f $PIDPATH/$SERVERNAME.pid ]; then
    echo -n $"Stopping $SERVERNAME...   "
    kill -9 `cat $PIDPATH/$SERVERNAME.pid`
    RETVAL=$?
    get_message
    # Delete pidfile only when server successfully stops
    if [ $RETVAL -eq 0 ]; then
        rm -f $PIDPATH/$SERVERNAME.pid "$SERVERNAME.pid" >/dev/null 2>&1
    fi
else
    echo -n $"$SERVERNAME is NOT running...     "
    RETVAL=1
    get_message
fi
}

case "$1" in
start)
start
;;
stop)
stop
;;
status)
status -p "$PIDPATH/$SERVERNAME.pid" $SERVERNAME
RETVAL=$?
;;
restart)
stop
sleep 5
start
;;
*)
echo $"Usage: $0 {start|stop|restart|status}"
RETVAL=3
get_message
exit 3
;;
esac

exit $RETVAL
